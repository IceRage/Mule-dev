#ifndef SYMBOLTABLESAUTOGENERATED_HPP
#define SYMBOLTABLESAUTOGENERATED_HPP

/******************************************************************************
/*{% for line in auto_generated_warning %}*/
 /*{{ line }}*/
/*{% endfor %}*/
 *****************************************************************************/
 
#include "multiscale/verification/spatial-temporal/attribute/SpatialMeasureAttribute.hpp"
#include "multiscale/verification/spatial-temporal/attribute/SubsetSpecificAttribute.hpp"

#include <boost/spirit/include/qi_symbols.hpp>


namespace multiscale {

    namespace verification {

        // Namespace aliases
        namespace qi = boost::spirit::qi;


        //! Symbol table and parser for the spatial measure type
        struct SpatialMeasureTypeParser : qi::symbols<char, multiscale::verification::SpatialMeasureType> {

            SpatialMeasureTypeParser() {
                add
                /*{% for spatial_measure in spatial_measures %}*/
                    (/*{{ "%-22s"|format("\"" + spatial_measure.name + "\"") }}*/, SpatialMeasureType::/*{{ spatial_measure.name|first_to_upper }}*/)
                /*{% endfor %}*/
                ;
            }

        };

        //! Symbol table and parser for a specific subset type
        struct SubsetSpecificTypeParser : qi::symbols<char, multiscale::verification::SubsetSpecificType> {

            SubsetSpecificTypeParser() {
                add
                /*{% for spatial_entity in spatial_entities %}*/
                    (/*{{ "%-11s"|format("\"" + spatial_entity.name + "s\"") }}*/, SubsetSpecificType::/*{{ spatial_entity.name|first_to_upper }}*/s)
                /*{% endfor %}*/
                ;
            }

        };

    };

};


#endif
