#ifndef AUTOGENERATEDSYMBOLTABLES_HPP
#define AUTOGENERATEDSYMBOLTABLES_HPP

#include "multiscale/verification/spatial-temporal/attribute/SpatialMeasureAttribute.hpp"
#include "multiscale/verification/spatial-temporal/attribute/SubsetSpecificAttribute.hpp"

#include <boost/spirit/include/qi_symbols.hpp>


namespace multiscale {

    namespace verification {

        //! Symbol table and parser for the spatial measure type
        struct SpatialMeasureTypeParser : qi::symbols<char, multiscale::verification::SpatialMeasureType> {

            SpatialMeasureTypeParser() {
                add
                    ("clusteredness"        , SpatialMeasureType::Clusteredness)
                    ("density"              , SpatialMeasureType::Density)
                    ("area"                 , SpatialMeasureType::Area)
                    ("perimeter"            , SpatialMeasureType::Perimeter)
                    ("distanceFromOrigin"   , SpatialMeasureType::DistanceFromOrigin)
                    ("angle"                , SpatialMeasureType::Angle)
                    ("triangleMeasure"      , SpatialMeasureType::TriangleMeasure)
                    ("rectangleMeasure"     , SpatialMeasureType::RectangleMeasure)
                    ("circleMeasure"        , SpatialMeasureType::CircleMeasure)
                    ("centroidX"            , SpatialMeasureType::CentroidX)
                    ("centroidY"            , SpatialMeasureType::CentroidY)
                ;
            }

        };

        //! Symbol table and parser for a specific subset type
        struct SubsetSpecificTypeParser : qi::symbols<char, multiscale::verification::SubsetSpecificType> {

            SubsetSpecificTypeParser() {
                add
                    ("clusters" , SubsetSpecificType::Clusters)
                    ("regions"  , SubsetSpecificType::Regions)
                ;
            }

        };

    };

};

#endif
