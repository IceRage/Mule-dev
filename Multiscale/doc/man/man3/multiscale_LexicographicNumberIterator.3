.TH "multiscale::LexicographicNumberIterator" 3 "Sun Mar 17 2013" "Version 0.0.1" "Multiscale" \" -*- nroff -*-
.ad l
.nh
.SH NAME
multiscale::LexicographicNumberIterator \- 
.PP
Iterator class starting at 1 and ending at the provided upper bound considering that each number is followed by an '_'\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <LexicographicNumberIterator\&.hpp>\fP
.PP
Inherits \fBmultiscale::NumberIterator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLexicographicNumberIterator\fP (unsigned int \fBupperBound\fP)"
.br
.ti -1c
.RI "\fB~LexicographicNumberIterator\fP ()"
.br
.ti -1c
.RI "unsigned int \fBnumber\fP ()"
.br
.RI "\fIGet the number pointed by the iterator\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitialise\fP ()"
.br
.RI "\fIInitialise the vectors of digits\&. \fP"
.ti -1c
.RI "bool \fBhasNextInitialised\fP ()"
.br
.RI "\fICheck if there is a next number when in initialised state\&. \fP"
.ti -1c
.RI "void \fBresetCurrentNumber\fP ()"
.br
.RI "\fIReset the digits of the current number to the initial value\&. \fP"
.ti -1c
.RI "void \fBnumberToDigits\fP (unsigned int \fBnumber\fP, vector< unsigned char > &digits)"
.br
.RI "\fIConvert the number to a vector of digits\&. \fP"
.ti -1c
.RI "void \fBreverseDigits\fP (vector< unsigned char > &digits)"
.br
.RI "\fIReverse the order of the digits\&. \fP"
.ti -1c
.RI "unsigned int \fBdigitsToNumber\fP (vector< unsigned char > &digits)"
.br
.RI "\fIConvert the vector of digits to the number they represent\&. \fP"
.ti -1c
.RI "bool \fBisLargerThanUpperBound\fP (unsigned char lastDigit)"
.br
.RI "\fICheck if the current number with the provided last digit is greater than the upper bound\&. \fP"
.ti -1c
.RI "void \fBpadWithZeros\fP ()"
.br
.RI "\fIPad the current number with zeros\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "vector< unsigned char > \fBupperBoundDigits\fP"
.br
.ti -1c
.RI "vector< unsigned char > \fBcurrentNumberDigits\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Iterator class starting at 1 and ending at the provided upper bound considering that each number is followed by an '_'\&. 
.PP
Definition at line 14 of file LexicographicNumberIterator\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "multiscale::LexicographicNumberIterator::LexicographicNumberIterator (unsigned intupperBound)"

.SS "multiscale::LexicographicNumberIterator::~LexicographicNumberIterator ()"

.SH "Member Function Documentation"
.PP 
.SS "unsigned int multiscale::LexicographicNumberIterator::digitsToNumber (vector< unsigned char > &digits)\fC [private]\fP"

.PP
Convert the vector of digits to the number they represent\&. \fBParameters:\fP
.RS 4
\fIdigits\fP The digits 
.RE
.PP

.SS "bool multiscale::LexicographicNumberIterator::hasNextInitialised ()\fC [private]\fP, \fC [virtual]\fP"

.PP
Check if there is a next number when in initialised state\&. 
.PP
Implements \fBmultiscale::NumberIterator\fP\&.
.SS "void multiscale::LexicographicNumberIterator::initialise ()\fC [private]\fP, \fC [virtual]\fP"

.PP
Initialise the vectors of digits\&. 
.PP
Implements \fBmultiscale::NumberIterator\fP\&.
.SS "bool multiscale::LexicographicNumberIterator::isLargerThanUpperBound (unsigned charlastDigit)\fC [private]\fP"

.PP
Check if the current number with the provided last digit is greater than the upper bound\&. Check if the current number is greater than the upper bound when replacing the last digit of the current number with the provided digit
.PP
\fBParameters:\fP
.RS 4
\fIlastDigit\fP The last digit 
.RE
.PP

.SS "unsigned int multiscale::LexicographicNumberIterator::number ()\fC [virtual]\fP"

.PP
Get the number pointed by the iterator\&. 
.PP
Implements \fBmultiscale::NumberIterator\fP\&.
.SS "void multiscale::LexicographicNumberIterator::numberToDigits (unsigned intnumber, vector< unsigned char > &digits)\fC [private]\fP"

.PP
Convert the number to a vector of digits\&. \fBParameters:\fP
.RS 4
\fInumber\fP The number 
.br
\fIdigits\fP The digits of the number 
.RE
.PP

.SS "void multiscale::LexicographicNumberIterator::padWithZeros ()\fC [private]\fP"

.PP
Pad the current number with zeros\&. Pad the current number with the maximum number of zeros such that it does not to become larger than the upper bound 
.SS "void multiscale::LexicographicNumberIterator::resetCurrentNumber ()\fC [private]\fP, \fC [virtual]\fP"

.PP
Reset the digits of the current number to the initial value\&. 
.PP
Implements \fBmultiscale::NumberIterator\fP\&.
.SS "void multiscale::LexicographicNumberIterator::reverseDigits (vector< unsigned char > &digits)\fC [private]\fP"

.PP
Reverse the order of the digits\&. Reverse the order of the digits such that the first one is swapped with the last one, the second one is swapped with the last but one and so on\&.
.PP
\fBParameters:\fP
.RS 4
\fIdigits\fP The digits 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "vector<unsigned char> multiscale::LexicographicNumberIterator::currentNumberDigits\fC [private]\fP"
The digits of the number to which the iterator points 
.PP
Definition at line 19 of file LexicographicNumberIterator\&.hpp\&.
.SS "vector<unsigned char> multiscale::LexicographicNumberIterator::upperBoundDigits\fC [private]\fP"
The digits of the upper bound 
.PP
Definition at line 18 of file LexicographicNumberIterator\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multiscale from the source code\&.
