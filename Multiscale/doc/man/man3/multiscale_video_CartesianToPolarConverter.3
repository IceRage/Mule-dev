.TH "multiscale::video::CartesianToPolarConverter" 3 "Sun Mar 17 2013" "Version 0.0.1" "Multiscale" \" -*- nroff -*-
.ad l
.nh
.SH NAME
multiscale::video::CartesianToPolarConverter \- 
.PP
Converter from the rectangular geometry grid cells to annular sectors\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CartesianToPolarConverter\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCartesianToPolarConverter\fP (const string &\fBinputFilepath\fP, const string &\fBoutputFilepath\fP)"
.br
.ti -1c
.RI "\fB~CartesianToPolarConverter\fP ()"
.br
.ti -1c
.RI "void \fBconvert\fP (bool outputToScript)"
.br
.RI "\fIStart the conversion\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBreadInputData\fP ()  throw (string)"
.br
.RI "\fIRead the input data\&. \fP"
.ti -1c
.RI "void \fBreadHeaderLine\fP (ifstream &fin)  throw (string)"
.br
.RI "\fIRead the header line\&. \fP"
.ti -1c
.RI "void \fBreadConcentrations\fP (ifstream &fin)  throw (string)"
.br
.RI "\fIRead the concentrations\&. \fP"
.ti -1c
.RI "void \fBtransformToAnnularSectors\fP ()"
.br
.RI "\fIConvert the concentrations to annular sectors\&. \fP"
.ti -1c
.RI "void \fBoutputResultsAsFile\fP ()"
.br
.RI "\fIOutput the results as a plain file\&. \fP"
.ti -1c
.RI "void \fBoutputResultsAsScript\fP ()"
.br
.RI "\fIOutput the results as a gnuplot script\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "vector< \fBAnnularSector\fP > \fBannularSectors\fP"
.br
.ti -1c
.RI "vector< double > \fBconcentrations\fP"
.br
.ti -1c
.RI "unsigned long \fBnrOfConcentricCircles\fP"
.br
.ti -1c
.RI "unsigned long \fBnrOfSectors\fP"
.br
.ti -1c
.RI "double \fBsimulationTime\fP"
.br
.ti -1c
.RI "string \fBinputFilepath\fP"
.br
.ti -1c
.RI "string \fBoutputFilepath\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Converter from the rectangular geometry grid cells to annular sectors\&. 
.PP
Definition at line 28 of file CartesianToPolarConverter\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "multiscale::video::CartesianToPolarConverter::CartesianToPolarConverter (const string &inputFilepath, const string &outputFilepath)"

.SS "multiscale::video::CartesianToPolarConverter::~CartesianToPolarConverter ()"

.SH "Member Function Documentation"
.PP 
.SS "void multiscale::video::CartesianToPolarConverter::convert (booloutputToScript)"

.PP
Start the conversion\&. \fBParameters:\fP
.RS 4
\fIoutputToScript\fP Output to script or to plain file 
.RE
.PP

.SS "void multiscale::video::CartesianToPolarConverter::outputResultsAsFile ()\fC [private]\fP"

.PP
Output the results as a plain file\&. 
.SS "void multiscale::video::CartesianToPolarConverter::outputResultsAsScript ()\fC [private]\fP"

.PP
Output the results as a gnuplot script\&. 
.SS "void multiscale::video::CartesianToPolarConverter::readConcentrations (ifstream &fin)  throw (string)\fC [private]\fP"

.PP
Read the concentrations\&. \fBParameters:\fP
.RS 4
\fIfin\fP Input file stream 
.RE
.PP

.SS "void multiscale::video::CartesianToPolarConverter::readHeaderLine (ifstream &fin)  throw (string)\fC [private]\fP"

.PP
Read the header line\&. The header line contains values for number of concentric circles, number of sectors and simulation time
.PP
\fBParameters:\fP
.RS 4
\fIfin\fP Input file stream 
.RE
.PP

.SS "void multiscale::video::CartesianToPolarConverter::readInputData ()  throw (string)\fC [private]\fP"

.PP
Read the input data\&. 
.SS "void multiscale::video::CartesianToPolarConverter::transformToAnnularSectors ()\fC [private]\fP"

.PP
Convert the concentrations to annular sectors\&. 
.SH "Member Data Documentation"
.PP 
.SS "vector<\fBAnnularSector\fP> multiscale::video::CartesianToPolarConverter::annularSectors\fC [private]\fP"
Resulting annular sectors 
.PP
Definition at line 32 of file CartesianToPolarConverter\&.hpp\&.
.SS "vector<double> multiscale::video::CartesianToPolarConverter::concentrations\fC [private]\fP"
Concentrations received as input 
.PP
Definition at line 33 of file CartesianToPolarConverter\&.hpp\&.
.SS "string multiscale::video::CartesianToPolarConverter::inputFilepath\fC [private]\fP"
Path to the input file 
.PP
Definition at line 39 of file CartesianToPolarConverter\&.hpp\&.
.SS "unsigned long multiscale::video::CartesianToPolarConverter::nrOfConcentricCircles\fC [private]\fP"
Number of concentric circles 
.PP
Definition at line 35 of file CartesianToPolarConverter\&.hpp\&.
.SS "unsigned long multiscale::video::CartesianToPolarConverter::nrOfSectors\fC [private]\fP"
Number of sectors 
.PP
Definition at line 36 of file CartesianToPolarConverter\&.hpp\&.
.SS "string multiscale::video::CartesianToPolarConverter::outputFilepath\fC [private]\fP"
Path to the output file 
.PP
Definition at line 40 of file CartesianToPolarConverter\&.hpp\&.
.SS "double multiscale::video::CartesianToPolarConverter::simulationTime\fC [private]\fP"
Simulation time corresponding to the input data 
.PP
Definition at line 37 of file CartesianToPolarConverter\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multiscale from the source code\&.
